{"version":3,"file":"recorder-manager.js","names":["DataEvent","_Event","_inheritsLoose","apply","arguments","NewSessionWithError","sessionId","instance","Types","bubbles","cancelable","data","UploadSessionFinished","sessions","_createClass","key","get","_wrapNativeSuper","Event","RecorderManager","sessionWorker","paginator","_itemsPaginator","_proto","prototype","startRecord","self","stopRecord","rrweb","record","emit","event","post","then","window","dispatchEvent","plugins","getRecordConsolePlugin","init","endpoint","urlWorker","URL","location","origin","pathname","WorkerClient","toString","initInstance","downloadImport","request","_this","import","getEventsForSessionAt","events","response","items","uploadSessions","_this2","export","clear","deleteAt","at","_this3","fetch","session","delete","_delete","_this4","loadPaginatorItems","offset","limit","filter","PaginatorFilter","append","pop","Object","assign"],"sources":["../../ts/js/lib/recorder-manager.ts"],"sourcesContent":["import {IRecordEvent, IRecordSession, SessionWorker} from \"VMPL_BugReplay/js/api/session\";\nimport ItemPaginator, {PaginatorFilter} from \"VMPL_BugReplay/js/lib/items-paginator\";\nimport {IPaginatorFilter, IPaginatorLoader, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\nimport {WorkerClient} from \"VMPL_BugReplay/js/lib/worker/client\";\nimport {RecordSession} from \"VMPL_BugReplay/js/lib/session/model/record-session\";\nimport {eventWithTime, recordOptions, RecordPlugin} from \"rrweb/typings/types\";\n\ndeclare const rrweb: {record: (options: recordOptions<eventWithTime>) => Function, getRecordConsolePlugin: () => RecordPlugin };\n\nexport class DataEvent extends Event {\n    data: any;\n\n    static get Types() {\n        return  {\n            NewSessionWithError: 'vmpl-new-session-with-error',\n            UploadSessionFinished: 'vmpl-upload-session-finished',\n        }\n    }\n\n    static NewSessionWithError(sessionId: number): DataEvent {\n        const instance = new this(DataEvent.Types.NewSessionWithError, {bubbles: false, cancelable: false});\n        instance.data = sessionId;\n        return instance;\n    }\n\n    static UploadSessionFinished(sessions: IRecordSession[]): DataEvent {\n        const instance = new this(DataEvent.Types.UploadSessionFinished, {bubbles: false, cancelable: false});\n        instance.data = sessions;\n        return instance;\n    }\n}\n\nexport default class RecorderManager implements IPaginatorLoader<IRecordSession> {\n    readonly paginator: ItemPaginator<RecordSession, RecorderManager>;\n    stopRecord: Function;\n\n    protected constructor(\n        protected readonly sessionWorker: SessionWorker,\n    ) {\n        this.paginator = new ItemPaginator([], this);\n    }\n\n    startRecord() {\n        ((self) => {\n            self.stopRecord = rrweb.record({\n                emit(event: IRecordEvent) {\n                    self.sessionWorker.post(event)\n                        .then(sessionId => {\n                            sessionId === 0\n                                || window.dispatchEvent(DataEvent.NewSessionWithError(sessionId));\n                        })\n                },\n                plugins: [rrweb.getRecordConsolePlugin()],\n            })\n        })(this);\n    }\n\n    static init(endpoint: string, instance: string = 'BugReplay'): Promise<RecorderManager> {\n        const urlWorker = new URL(location.origin);\n        urlWorker.pathname = `${endpoint}/VMPL_BugReplay/js/lib/session/worker`;\n\n        return WorkerClient<SessionWorker>(urlWorker.toString())\n            .then((sessionWorker: SessionWorker) => {\n                return sessionWorker.initInstance(instance)\n                    .then(() => new RecorderManager(sessionWorker))\n            })\n    }\n\n    downloadImport(request: URL): Promise<RecorderManager> {\n        return this.sessionWorker.import(request.toString())\n            .then(() => this);\n    }\n\n    getEventsForSessionAt(sessions: IRecordSession[]): Promise<IRecordEvent[]> {\n        return this.sessionWorker.events(sessions)\n            .then(response => response.items);\n    }\n\n    uploadSessions(sessions: IRecordSession[]): Promise<void> {\n        return this.sessionWorker.export(sessions)\n            .then(() => this.paginator.clear())\n            .then(() => window.dispatchEvent(DataEvent.UploadSessionFinished(sessions)))\n            .then();\n    }\n\n    deleteAt(at: number): Promise<void> {\n        return this.paginator.fetch(at)\n            .then(session => this.delete([session]));\n    }\n\n    delete(sessions: RecordSession[]): Promise<void> {\n        return this.sessionWorker.delete(sessions)\n            .then(() => this.paginator.clear());\n    }\n\n    loadPaginatorItems(\n        offset: number,\n        limit: number,\n        filter: IPaginatorFilter<IRecordSession>,\n    ): Promise<IPaginatorResponse<RecordSession>> {\n        return this.sessionWorker.sessions(offset, limit, filter);\n    }\n\n    session(sessionId: number): Promise<IRecordSession> {\n        const filter = new PaginatorFilter<IRecordSession>();\n        filter.append(new PaginatorFilter<IRecordSession>('id', sessionId));\n\n        return this.sessionWorker.sessions(0, 1, filter)\n            .then(items => items.items.pop());\n    }\n}\n"],"mappings":"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"}