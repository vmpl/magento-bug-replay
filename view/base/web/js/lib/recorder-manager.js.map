{"version":3,"file":"recorder-manager.js","names":["RecorderManager","sessionWorker","paginator","_itemsPaginator","_proto","prototype","startRecord","self","stopRecord","rrweb","record","emit","event","post","init","instance","fetch","then","response","json","content","WorkerClient","assetUrl","sessionLoader","initInstance","getEventsForSessionAt","sessions","events","items","uploadSessions","_this","export","clear","deleteAt","at","_this2","session","delete","_delete","_this3","loadPaginatorItems","offset","limit","filter"],"sources":["../../ts/js/lib/recorder-manager.ts"],"sourcesContent":["import {IRecordEvent, IRecordSession, SessionWorker} from \"VMPL_BugReplay/js/api/session\";\nimport {ConfigWorkerContent} from \"VMPL_BugReplay/js/api/response\";\nimport ItemPaginator from \"VMPL_BugReplay/js/lib/items-paginator\";\nimport {IPaginatorFilter, IPaginatorLoader, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\nimport {WorkerClient} from \"VMPL_BugReplay/js/lib/worker/client\";\nimport {RecordSession} from \"VMPL_BugReplay/js/lib/session/model/record-session\";\ndeclare const rrweb: {record: Function};\n\nexport default class RecorderManager implements IPaginatorLoader<IRecordSession> {\n    readonly paginator: ItemPaginator<RecordSession, RecorderManager>;\n    stopRecord: Function;\n\n    protected constructor(\n        protected readonly sessionWorker: SessionWorker,\n    ) {\n        this.paginator = new ItemPaginator([], this);\n    }\n\n    startRecord() {\n        ((self) => {\n            self.stopRecord = rrweb.record({\n                emit(event: IRecordEvent) {\n                    self.sessionWorker.post(event);\n                }\n            })\n        })(this);\n    }\n\n    static init(instance: string = 'BugReplay'): Promise<RecorderManager> {\n        return fetch('/vmpl-bug-report/session/config')\n            .then(response => response.json())\n            .then((content: ConfigWorkerContent) => WorkerClient<SessionWorker>(content.assetUrl.sessionLoader))\n            .then((sessionWorker: SessionWorker) => {\n                return sessionWorker.initInstance(instance)\n                    .then(() => new RecorderManager(sessionWorker))\n            })\n    }\n\n    getEventsForSessionAt(sessions: IRecordSession[]): Promise<IRecordEvent[]> {\n        return this.sessionWorker.events(sessions)\n            .then(response => response.items);\n    }\n\n    uploadSessions(sessions: IRecordSession[]): Promise<void> {\n        return this.sessionWorker.export(sessions)\n            .then(() => this.paginator.clear())\n    }\n\n    deleteAt(at: number): Promise<void> {\n        return this.paginator.fetch(at)\n            .then(session => this.delete([session]));\n    }\n\n    delete(sessions: RecordSession[]): Promise<void> {\n        return this.sessionWorker.delete(sessions)\n            .then(() => this.paginator.clear());\n    }\n\n    loadPaginatorItems(\n        offset: number,\n        limit: number,\n        filter: IPaginatorFilter<IRecordSession>,\n    ): Promise<IPaginatorResponse<RecordSession>> {\n        return this.sessionWorker.sessions(offset, limit, filter);\n    }\n}\n"],"mappings":";;;MAQqBA,eAAe;IAAA;;IAIhC,SAAAA,gBACuBC,aAA4B,EACjD;MAAA,KADqBA,aAA4B,GAA5BA,aAA4B;MAE/C,IAAI,CAACC,SAAS,GAAG,IAAAC,eAAA,CAAkB,EAAE,EAAE,IAAI,CAAC;IAChD;IAAC,IAAAC,MAAA,GAAAJ,eAAA,CAAAK,SAAA;IAAAD,MAAA,CAEDE,WAAW,GAAX,SAAAA,YAAA,EAAc;MACV,CAAC,UAACC,IAAI,EAAK;QACPA,IAAI,CAACC,UAAU,GAAGC,KAAK,CAACC,MAAM,CAAC;UAC3BC,IAAI,WAAAA,KAACC,KAAmB,EAAE;YACtBL,IAAI,CAACN,aAAa,CAACY,IAAI,CAACD,KAAK,CAAC;UAClC;QACJ,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;IAAAZ,eAAA,CAEMc,IAAI,GAAX,SAAAA,KAAYC,QAAgB,EAA0C;MAAA,IAA1DA,QAAgB;QAAhBA,QAAgB,GAAG,WAAW;MAAA;MACtC,OAAOC,KAAK,CAAC,iCAAiC,CAAC,CAC1CC,IAAI,CAAC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAA,EAAC,CACjCF,IAAI,CAAC,UAACG,OAA4B;QAAA,OAAK,IAAAC,oBAAY,EAAgBD,OAAO,CAACE,QAAQ,CAACC,aAAa,CAAC;MAAA,EAAC,CACnGN,IAAI,CAAC,UAAChB,aAA4B,EAAK;QACpC,OAAOA,aAAa,CAACuB,YAAY,CAACT,QAAQ,CAAC,CACtCE,IAAI,CAAC;UAAA,OAAM,IAAIjB,eAAe,CAACC,aAAa,CAAC;QAAA,EAAC;MACvD,CAAC,CAAC;IACV,CAAC;IAAAG,MAAA,CAEDqB,qBAAqB,GAArB,SAAAA,sBAAsBC,QAA0B,EAA2B;MACvE,OAAO,IAAI,CAACzB,aAAa,CAAC0B,MAAM,CAACD,QAAQ,CAAC,CACrCT,IAAI,CAAC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACU,KAAK;MAAA,EAAC;IACzC,CAAC;IAAAxB,MAAA,CAEDyB,cAAc,GAAd,SAAAA,eAAeH,QAA0B,EAAiB;MAAA,IAAAI,KAAA;MACtD,OAAO,IAAI,CAAC7B,aAAa,CAAC8B,MAAM,CAACL,QAAQ,CAAC,CACrCT,IAAI,CAAC;QAAA,OAAMa,KAAI,CAAC5B,SAAS,CAAC8B,KAAK,CAAC,CAAC;MAAA,EAAC;IAC3C,CAAC;IAAA5B,MAAA,CAED6B,QAAQ,GAAR,SAAAA,SAASC,EAAU,EAAiB;MAAA,IAAAC,MAAA;MAChC,OAAO,IAAI,CAACjC,SAAS,CAACc,KAAK,CAACkB,EAAE,CAAC,CAC1BjB,IAAI,CAAC,UAAAmB,OAAO;QAAA,OAAID,MAAI,CAACE,MAAM,CAAC,CAACD,OAAO,CAAC,CAAC;MAAA,EAAC;IAChD,CAAC;IAAAhC,MAAA,CAEDiC,MAAM,GAAN,SAAAC,QAAOZ,QAAyB,EAAiB;MAAA,IAAAa,MAAA;MAC7C,OAAO,IAAI,CAACtC,aAAa,CAACoC,MAAM,CAACX,QAAQ,CAAC,CACrCT,IAAI,CAAC;QAAA,OAAMsB,MAAI,CAACrC,SAAS,CAAC8B,KAAK,CAAC,CAAC;MAAA,EAAC;IAC3C,CAAC;IAAA5B,MAAA,CAEDoC,kBAAkB,GAAlB,SAAAA,mBACIC,MAAc,EACdC,KAAa,EACbC,MAAwC,EACE;MAC1C,OAAO,IAAI,CAAC1C,aAAa,CAACyB,QAAQ,CAACe,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;IAC7D,CAAC;IAAA,OAAA3C,eAAA;EAAA;EAAA,OAAAA,eAAA;AAAA"}