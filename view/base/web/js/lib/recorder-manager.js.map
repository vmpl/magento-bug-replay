{"version":3,"file":"recorder-manager.js","names":["DataEvent","_Event","_inheritsLoose","apply","arguments","NewSessionWithError","sessionId","instance","Types","bubbles","cancelable","data","_createClass","key","get","_wrapNativeSuper","Event","RecorderManager","sessionWorker","paginator","_itemsPaginator","_proto","prototype","startRecord","self","stopRecord","rrwebRecord","emit","event","post","then","window","dispatchEvent","plugins","rrwebConsoleRecord","getRecordConsolePlugin","init","endpoint","urlWorker","URL","location","origin","pathname","WorkerClient","toString","initInstance","downloadImport","request","_this","import","getEventsForSessionAt","sessions","events","response","items","uploadSessions","_this2","export","clear","deleteAt","at","_this3","fetch","session","delete","_delete","_this4","loadPaginatorItems","offset","limit","filter","Object","assign"],"sources":["../../ts/js/lib/recorder-manager.ts"],"sourcesContent":["import {IRecordEvent, IRecordSession, SessionWorker} from \"VMPL_BugReplay/js/api/session\";\nimport ItemPaginator from \"VMPL_BugReplay/js/lib/items-paginator\";\nimport {IPaginatorFilter, IPaginatorLoader, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\nimport {WorkerClient} from \"VMPL_BugReplay/js/lib/worker/client\";\nimport {RecordSession} from \"VMPL_BugReplay/js/lib/session/model/record-session\";\n\ndeclare const rrwebRecord: Function;\ndeclare const rrwebConsoleRecord: { getRecordConsolePlugin: Function };\n\nexport class DataEvent extends Event {\n    data: any;\n\n    static get Types() {\n        return  {\n            NewSessionWithError: 'vmpl-new-session-with-error',\n        }\n    }\n\n    static NewSessionWithError(sessionId: number): DataEvent {\n        const instance = new this(DataEvent.Types.NewSessionWithError, {bubbles: false, cancelable: false});\n        instance.data = sessionId;\n        return instance;\n    }\n}\n\nexport default class RecorderManager implements IPaginatorLoader<IRecordSession> {\n    readonly paginator: ItemPaginator<RecordSession, RecorderManager>;\n    stopRecord: Function;\n\n    protected constructor(\n        protected readonly sessionWorker: SessionWorker,\n    ) {\n        this.paginator = new ItemPaginator([], this);\n    }\n\n    startRecord() {\n        ((self) => {\n            self.stopRecord = rrwebRecord({\n                emit(event: IRecordEvent) {\n                    self.sessionWorker.post(event)\n                        .then(sessionId => {\n                            if (sessionId === 0) {\n                                return;\n                            }\n\n                            window.dispatchEvent(DataEvent.NewSessionWithError(sessionId));\n                        })\n                },\n                plugins: [rrwebConsoleRecord.getRecordConsolePlugin()]\n            })\n        })(this);\n    }\n\n    static init(endpoint: string, instance: string = 'BugReplay'): Promise<RecorderManager> {\n        const urlWorker = new URL(location.origin);\n        urlWorker.pathname = `${endpoint}/VMPL_BugReplay/js/lib/session/worker`;\n\n        return WorkerClient<SessionWorker>(urlWorker.toString())\n            .then((sessionWorker: SessionWorker) => {\n                return sessionWorker.initInstance(instance)\n                    .then(() => new RecorderManager(sessionWorker))\n            })\n    }\n\n    downloadImport(request: URL): Promise<RecorderManager> {\n        return this.sessionWorker.import(request.toString())\n            .then(() => this);\n    }\n\n    getEventsForSessionAt(sessions: IRecordSession[]): Promise<IRecordEvent[]> {\n        return this.sessionWorker.events(sessions)\n            .then(response => response.items);\n    }\n\n    uploadSessions(sessions: IRecordSession[]): Promise<void> {\n        return this.sessionWorker.export(sessions)\n            .then(() => this.paginator.clear())\n    }\n\n    deleteAt(at: number): Promise<void> {\n        return this.paginator.fetch(at)\n            .then(session => this.delete([session]));\n    }\n\n    delete(sessions: RecordSession[]): Promise<void> {\n        return this.sessionWorker.delete(sessions)\n            .then(() => this.paginator.clear());\n    }\n\n    loadPaginatorItems(\n        offset: number,\n        limit: number,\n        filter: IPaginatorFilter<IRecordSession>,\n    ): Promise<IPaginatorResponse<RecordSession>> {\n        return this.sessionWorker.sessions(offset, limit, filter);\n    }\n}\n"],"mappings":"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"}