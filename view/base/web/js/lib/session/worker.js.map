{"version":3,"file":"worker.js","names":["_database","_interopRequireDefault","_axios","_dec","_class","obj","__esModule","default","Worker","WorkerConsumer","_proto","prototype","initInstance","instance","database","SessionDatabase","Promise","resolve","post","event","_this","all","buffer","where","equals","EventType","Meta","count","FullSnapshot","then","_ref","metaCount","snapshotCount","flushBuffer","put","catch","error","sessions","offset","limit","filter","orderBy","reverse","toArray","match","bind","length","items","slice","map","it","RecordSession","title","href","timestamp","id","uploaded","meta","totalRecords","events","sessionsIds","Number","isInteger","anyOf","export","_export","_this2","sessionIds","table","value","key","includes","sessionId","blob","body","FormData","append","File","axios","response","data","_ref2","fileName","update","delete","_delete","_this3","transaction","eachPrimaryKey","bulkDelete","_this4","first","_ref3","snapshot","tagMetaTitle","node","childNodes","find","tagName","_it$attributes","attributes","name","_tagMetaTitle$attribu","_tagMetaTitle$attribu2","content","bulkPut","clear"],"sources":["../../../ts/js/lib/session/worker.ts"],"sourcesContent":["import {\n    EventType,\n    IRecordEvent, IRecordSession,\n    SessionWorker as SessionWorkerInterface,\n} from 'VMPL_BugReplay/js/api/session'\nimport SessionDatabase from \"VMPL_BugReplay/js/lib/session/database\";\nimport {IPaginatorFilter, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\nimport {WorkerConsumer} from \"VMPL_BugReplay/js/lib/worker/consumer\";\nimport axios from \"axios\";\nimport {RecordSession} from \"VMPL_BugReplay/js/lib/session/model/record-session\";\n\n@WorkerConsumer()\nclass Worker implements SessionWorkerInterface {\n    protected database: SessionDatabase;\n\n    initInstance(instance: string): Promise<void> {\n        this.database = new SessionDatabase(instance);\n        return Promise.resolve();\n    }\n\n    post(event: IRecordEvent): Promise<number> {\n        return Promise.all([\n            this.database.buffer.where('type').equals(EventType.Meta).count(),\n            this.database.buffer.where('type').equals(EventType.FullSnapshot).count(),\n        ])\n            .then(([metaCount, snapshotCount]) => {\n                return metaCount === snapshotCount && snapshotCount === 0\n                    ? Promise.resolve()\n                    : this.flushBuffer()\n            })\n            .then(() => this.database.buffer.put(event).catch(error => {\n                throw error;\n            }));\n    }\n\n    sessions(\n        offset: number = 0,\n        limit: number, filter: IPaginatorFilter<IRecordSession>\n    ): Promise<IPaginatorResponse<RecordSession>> {\n        return this.database.sessions\n            .orderBy('timestamp')\n            .reverse()\n            .toArray()\n            .then(filter.match.bind(filter))\n            .then(sessions => {\n                const count = sessions.length;\n                return {\n                    items: sessions.slice(offset, offset + limit).map(it => new RecordSession(\n                        it.title,\n                        it.href,\n                        it.timestamp,\n                        it.id,\n                        it.uploaded,\n                    )),\n                    meta: {\n                        totalRecords: count,\n                    }\n                }\n            })\n    }\n\n    events(sessions: IRecordSession[]): Promise<IPaginatorResponse<IRecordEvent>> {\n        const sessionsIds = sessions\n            .map(it => it.id)\n            .filter(it => Number.isInteger(it))\n        return this.database.events\n            .where('sessionId')\n            .anyOf(sessionsIds)\n            .toArray()\n            .then(events => {\n                return <IPaginatorResponse<IRecordEvent>>{\n                    items: events,\n                    meta: {\n                        totalRecords: events.length,\n                    }\n                }\n            })\n    }\n\n    export(sessions: IRecordSession[]): Promise<number[]> {\n        const sessionIds = sessions\n            .filter(it => it?.id && !it?.uploaded)\n            .map(it => it.id);\n\n        if (!sessionIds.length) {\n            return Promise.resolve([]);\n        }\n\n        return this.database.export({\n            filter: (table: string, value: any, key?: any): boolean => {\n                switch (table) {\n                    case 'sessions':\n                        return sessionIds.includes((<IRecordSession>value).id);\n                    case 'events':\n                        return sessionIds.includes((<IRecordEvent>value).sessionId);\n                    default:\n                        return false;\n                }\n            },\n        }).then(blob => {\n            const body = new FormData();\n            body.append('database', new File([blob], 'database.json'), 'database.json');\n            return axios.post('/vmpl-bug-report/session/upload', body)\n                .then(response => response.data);\n        }).then(({fileName}) => {\n            return Promise.all(\n                sessionIds\n                    .map(id => {\n                        return this.database.sessions.update(id, {uploaded: fileName})\n                    }),\n            );\n        })\n    }\n\n    delete(sessions: IRecordSession[]): Promise<void> {\n        const sessionIds = sessions.map(it => it.id).filter(it => !!it);\n        return this.database.transaction('rw', [this.database.events, this.database.sessions], () => {\n            return this.database.events\n                .where('sessionId')\n                .anyOf(sessionIds)\n                .eachPrimaryKey(it => this.database.events.delete(it))\n                .then(() => this.database.sessions.bulkDelete(sessionIds))\n        });\n    }\n\n    private flushBuffer() {\n        return Promise.all([\n            this.database.buffer.where('type').equals(EventType.Meta).first(),\n            this.database.buffer.where('type').equals(EventType.FullSnapshot).first(),\n        ]).then(([meta, snapshot]) => {\n            const tagMetaTitle = snapshot?.data.node\n                .childNodes.find((it: any) => it?.tagName === 'html')\n                .childNodes.find((it: any) => it?.tagName === 'head')\n                .childNodes.find((it: any) => it?.attributes?.name === 'title')\n\n            return this.database.transaction('rw', [this.database.buffer, this.database.events, this.database.sessions], () => {\n                return this.database.sessions.put({\n                    href: meta.data.href,\n                    title: tagMetaTitle?.attributes?.content ?? 'Unknown',\n                    timestamp: meta.timestamp,\n                }).catch(error => {\n                    throw error;\n                }).then(sessionId => {\n                    return this.database.buffer\n                        .toArray()\n                        .then(events => events.map(it => {\n                            it.sessionId = sessionId;\n                            return it;\n                        }))\n                        .then(events => this.database.events.bulkPut(events))\n                        .then(() => this.database.buffer.clear())\n                })\n            })\n        }).then(() => {})\n    }\n}\n\n(new Worker());\n"],"mappings":"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"}