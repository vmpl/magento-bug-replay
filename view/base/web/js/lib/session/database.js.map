{"version":3,"file":"database.js","names":["Database","_dexie$Dexie","_inheritsLoose","databaseName","_this","call","addons","_dexieRelationships","initial","addingUploadFlag","sessions","mapToClass","RecordSession","events","RecordEvent","buffer","_proto","prototype","export","_export","options","exportDB","import","_import","blob","importInto","version","stores","Dexie"],"sources":["../../../ts/js/lib/session/database.ts"],"sourcesContent":["import {Dexie} from \"dexie\";\nimport {exportDB, importInto, ExportOptions, ImportOptions} from \"dexie-export-import\";\nimport relationships from \"dexie-relationships\";\nimport {IRecordEvent, IRecordSession} from \"VMPL_BugReplay/js/api/session\";\nimport {RecordEvent} from \"VMPL_BugReplay/js/lib/session/model/record-event\";\nimport {RecordSession} from \"VMPL_BugReplay/js/lib/session/model/record-session\";\n\nexport default class Database extends Dexie {\n    sessions!: Dexie.Table<IRecordSession, number>;\n    events!: Dexie.Table<IRecordEvent, number>;\n    buffer!: Dexie.Table<IRecordEvent, number>;\n\n    constructor(databaseName: string) {\n        super(databaseName, {addons: [relationships]});\n        this.initial();\n        this.addingUploadFlag();\n        this.sessions.mapToClass(RecordSession);\n        this.events.mapToClass(RecordEvent);\n        this.buffer.mapToClass(RecordEvent);\n    }\n\n    export(options?: ExportOptions): Promise<Blob> {\n        return exportDB(this, options);\n    }\n\n    import(blob: Blob, options?: ImportOptions): Promise<void> {\n        return importInto(this, blob, options);\n    }\n\n    private initial() {\n        this.version(1).stores({\n            sessions: '++id,&timestamp,href,title',\n            events: '&timestamp,*type,data,sessionId -> sessions.id',\n            buffer: '&timestamp,*type,data',\n        });\n    }\n\n    private addingUploadFlag() {\n        this.version(2).stores({\n            sessions: '++id,&timestamp,href,title,*uploaded',\n            events: '&timestamp,*type,data,sessionId -> sessions.id',\n            buffer: '&timestamp,*type,data',\n        });\n    }\n}\n"],"mappings":";;;;;MAOqBA,QAAQ,0BAAAC,YAAA;IAAA;;IAAAC,cAAA,CAAAF,QAAA,EAAAC,YAAA;IAKzB,SAAAD,SAAYG,YAAoB,EAAE;MAAA,IAAAC,KAAA;MAC9BA,KAAA,GAAAH,YAAA,CAAAI,IAAA,OAAMF,YAAY,EAAE;QAACG,MAAM,EAAE,CAAAC,mBAAA;MAAe,CAAC,CAAC;MAC9CH,KAAA,CAAKI,OAAO,CAAC,CAAC;MACdJ,KAAA,CAAKK,gBAAgB,CAAC,CAAC;MACvBL,KAAA,CAAKM,QAAQ,CAACC,UAAU,CAACC,4BAAa,CAAC;MACvCR,KAAA,CAAKS,MAAM,CAACF,UAAU,CAACG,wBAAW,CAAC;MACnCV,KAAA,CAAKW,MAAM,CAACJ,UAAU,CAACG,wBAAW,CAAC;MAAC,OAAAV,KAAA;IACxC;IAAC,IAAAY,MAAA,GAAAhB,QAAA,CAAAiB,SAAA;IAAAD,MAAA,CAEDE,MAAM,GAAN,SAAAC,QAAOC,OAAuB,EAAiB;MAC3C,OAAO,IAAAC,2BAAQ,EAAC,IAAI,EAAED,OAAO,CAAC;IAClC,CAAC;IAAAJ,MAAA,CAEDM,MAAM,GAAN,SAAAC,QAAOC,IAAU,EAAEJ,OAAuB,EAAiB;MACvD,OAAO,IAAAK,6BAAU,EAAC,IAAI,EAAED,IAAI,EAAEJ,OAAO,CAAC;IAC1C,CAAC;IAAAJ,MAAA,CAEOR,OAAO,GAAf,SAAAA,QAAA,EAAkB;MACd,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;QACnBjB,QAAQ,EAAE,4BAA4B;QACtCG,MAAM,EAAE,gDAAgD;QACxDE,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC;IAAAC,MAAA,CAEOP,gBAAgB,GAAxB,SAAAA,iBAAA,EAA2B;MACvB,IAAI,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;QACnBjB,QAAQ,EAAE,sCAAsC;QAChDG,MAAM,EAAE,gDAAgD;QACxDE,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC;IAAA,OAAAf,QAAA;EAAA,EApCiC4B,YAAK;EAAA,OAAA5B,QAAA;AAAA"}