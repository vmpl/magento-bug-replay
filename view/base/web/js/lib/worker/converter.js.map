{"version":3,"file":"converter.js","names":["Converter","classToObject","data","_knockout","isObservable","Promise","resolve","Blob","Array","all","map","bind","Object","Function","values","then","convertedObject","keys","key","index","fromEntries","objectToClass","_this","length","it","hasOwnProperty","_data$$$classModule$s","split","ModuleClass","RequiredClass","require","modules","loadedClass","assign"],"sources":["../../../ts/js/lib/worker/converter.ts"],"sourcesContent":["import ko from 'knockout';\n\nexport default class Converter {\n    protected constructor() {\n    }\n\n    static classToObject(data: any): Promise<any> {\n        if (ko.isObservable(data)) {\n            return Promise.resolve(data())\n        }\n\n        switch (true) {\n            case data instanceof Blob:\n                return Promise.resolve(data);\n            case data instanceof Array:\n                return Promise.all(data.map(this.classToObject.bind(this)));\n            case data instanceof Object:\n                if (data['$$serialize'] instanceof Function) {\n                    return Promise.resolve(data['$$serialize']());\n                }\n\n                return Promise.all(Object.values(data).map(this.classToObject.bind(this)))\n                    .then(values => {\n                        let convertedObject = Object.keys(data)\n                            .map((key, index) => [key, values[index]])\n                        return Object.fromEntries(convertedObject);\n                    })\n            default:\n                return Promise.resolve(data);\n        }\n    }\n\n    static objectToClass(data: any): Promise<any> {\n        switch (true) {\n            case data instanceof Blob:\n                return Promise.resolve(data);\n            case data instanceof Array:\n                return Promise.all(data.map(this.objectToClass.bind(this)));\n            case data instanceof Object && !!Object.keys(data).length:\n                return Promise.all(Object.values(data).map(it => this.objectToClass(it)))\n                    .then(values => {\n                        let convertedObject = Object.keys(data)\n                            .map((key, index) => [key, values[index]])\n                        convertedObject = Object.fromEntries(convertedObject);\n\n                        if (data.hasOwnProperty('$$classModule')) {\n                            const [ModuleClass, RequiredClass] = data['$$classModule'].split(';');\n                            return new Promise(resolve => {\n                                require([ModuleClass], function (modules: any) {\n                                    const loadedClass = modules[RequiredClass];\n                                    if (loadedClass['$$deserialize'] instanceof Function) {\n                                        resolve(loadedClass['$$deserialize'](convertedObject));\n                                    } else {\n                                        resolve(Object.assign(new loadedClass(), convertedObject));\n                                    }\n                                })\n                            });\n                        }\n\n                        return convertedObject;\n                    })\n            default:\n                return Promise.resolve(data);\n        }\n    }\n}\n"],"mappings":"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"}