{"version":3,"file":"database.js","names":["Database","_dexie$Dexie","_inheritsLoose","databaseName","_this","call","initial","sessions","mapToClass","RecordSession","events","RecordEvent","buffer","errors","_errorConsole","_proto","prototype","export","_export","options","exportDB","import","_import","blob","importInto","version","stores","sessionError","Dexie"],"sources":["../../../ts/js/bug-replay/session/database.ts"],"sourcesContent":["import {Dexie} from \"dexie\";\nimport {exportDB, importInto, ExportOptions, ImportOptions} from \"dexie-export-import\";\nimport {IErrorConsole, IRecordEvent, IRecordSession} from \"VMPL_BugReplay/js/api/session\";\nimport {RecordEvent} from \"VMPL_BugReplay/js/bug-replay/session/model/record-event\";\nimport {RecordSession} from \"VMPL_BugReplay/js/bug-replay/session/model/record-session\";\nimport ErrorConsole from \"VMPL_BugReplay/js/bug-replay/session/model/error-console\";\n\nexport default class Database extends Dexie {\n    sessions!: Dexie.Table<IRecordSession, number>;\n    events!: Dexie.Table<IRecordEvent, number>;\n    buffer!: Dexie.Table<IRecordEvent, number>;\n    errors!: Dexie.Table<IErrorConsole, string>;\n\n    constructor(databaseName: string) {\n        super(databaseName);\n        this.initial();\n        this.sessions.mapToClass(RecordSession);\n        this.events.mapToClass(RecordEvent);\n        this.buffer.mapToClass(RecordEvent);\n        this.errors.mapToClass(ErrorConsole);\n    }\n\n    export(options?: ExportOptions): Promise<Blob> {\n        return exportDB(this, options);\n    }\n\n    import(blob: Blob, options?: ImportOptions): Promise<void> {\n        return importInto(this, blob, options);\n    }\n\n    private initial() {\n        this.version(1).stores({\n            sessions: '++id,&timestamp,href,title,*uploaded',\n            events: '&timestamp,*type,data,sessionId',\n            buffer: '&timestamp,*type,data',\n            errors: '++id,&digest,message',\n            sessionError: '[sessionId+errorId],*sessionId,*errorId',\n        })\n    }\n}\n"],"mappings":";;;;;MAOqBA,QAAQ,0BAAAC,YAAA;IAAA;;IAAAC,cAAA,CAAAF,QAAA,EAAAC,YAAA;IAMzB,SAAAD,SAAYG,YAAoB,EAAE;MAAA,IAAAC,KAAA;MAC9BA,KAAA,GAAAH,YAAA,CAAAI,IAAA,OAAMF,YAAY,CAAC;MACnBC,KAAA,CAAKE,OAAO,CAAC,CAAC;MACdF,KAAA,CAAKG,QAAQ,CAACC,UAAU,CAACC,4BAAa,CAAC;MACvCL,KAAA,CAAKM,MAAM,CAACF,UAAU,CAACG,wBAAW,CAAC;MACnCP,KAAA,CAAKQ,MAAM,CAACJ,UAAU,CAACG,wBAAW,CAAC;MACnCP,KAAA,CAAKS,MAAM,CAACL,UAAU,CAAAM,aAAa,CAAC;MAAC,OAAAV,KAAA;IACzC;IAAC,IAAAW,MAAA,GAAAf,QAAA,CAAAgB,SAAA;IAAAD,MAAA,CAEDE,MAAM,GAAN,SAAAC,QAAOC,OAAuB,EAAiB;MAC3C,OAAO,IAAAC,2BAAQ,EAAC,IAAI,EAAED,OAAO,CAAC;IAClC,CAAC;IAAAJ,MAAA,CAEDM,MAAM,GAAN,SAAAC,QAAOC,IAAU,EAAEJ,OAAuB,EAAiB;MACvD,OAAO,IAAAK,6BAAU,EAAC,IAAI,EAAED,IAAI,EAAEJ,OAAO,CAAC;IAC1C,CAAC;IAAAJ,MAAA,CAEOT,OAAO,GAAf,SAAAA,QAAA,EAAkB;MACd,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;QACnBnB,QAAQ,EAAE,sCAAsC;QAChDG,MAAM,EAAE,iCAAiC;QACzCE,MAAM,EAAE,uBAAuB;QAC/BC,MAAM,EAAE,sBAAsB;QAC9Bc,YAAY,EAAE;MAClB,CAAC,CAAC;IACN,CAAC;IAAA,OAAA3B,QAAA;EAAA,EA/BiC4B,YAAK;EAAA,OAAA5B,QAAA;AAAA"}