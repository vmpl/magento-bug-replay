{"version":3,"file":"action-upload.js","names":["_uiComponent","extend","visibility","_knockout","observable","sessions","observableArray","defaults","template","submitLabel","_translate","modules","list","imports","initObservable","_this","_super","subscribe","Object","values","forEach","session","upload","onSessionUploadChange","bind","uploadChecked","some","it","onSubmit","target","event","_this2","stopPropagation","filter","_data","manager","then","uploadSessions","onCancel","reload","alert","_default"],"sources":["../../ts/js/view/action-upload.ts"],"sourcesContent":["import Component from \"uiComponent\";\nimport ko from 'knockout';\nimport ItemSession from \"VMPL_BugReplay/js/model/item-session\";\nimport $t from 'mage/translate';\nimport Data from \"VMPL_BugReplay/js/model/data\";\n\nexport default Component.extend({\n    visibility: ko.observable<boolean>(false),\n    sessions: ko.observableArray<ItemSession>(),\n    defaults: {\n        template: 'VMPL_BugReplay/player/mass-action',\n        submitLabel: $t('Upload'),\n        modules: {\n            list: 'player.sidebar.list',\n        },\n        imports: {\n            sessions: '${ $.provider }:sessions',\n        },\n    },\n    initObservable() {\n        this._super();\n\n        this.sessions.subscribe((sessions: { [index: number]: ItemSession }) => {\n            Object.values(sessions)\n                .forEach(session => {\n                    session.upload.subscribe(this.onSessionUploadChange.bind(this));\n                })\n        })\n\n        return this;\n    },\n    onSessionUploadChange() {\n        const sessions: { [index: number]: ItemSession } = this.sessions();\n        const uploadChecked = Object.values(sessions).some(it => it.upload());\n        this.visibility(uploadChecked);\n    },\n    onSubmit(target: any, event: MouseEvent) {\n        event.stopPropagation();\n\n        const sessions = Object.values<ItemSession>(this.sessions()).filter((it: ItemSession) => it.upload());\n        Data.manager\n            .then(manager => manager.uploadSessions(sessions))\n            .then(() => {\n                this.onCancel();\n                return this.list().reload()\n            })\n            .then(() => alert($t('Uploaded')));\n    },\n    onCancel() {\n        Object.values(this.sessions())\n            .forEach((session: ItemSession) => session.upload(false));\n    }\n});\n"],"mappings":";;;iBAMeA,YAAA,CAAUC,MAAM,CAAC;IAC5BC,UAAU,EAAEC,SAAA,CAAGC,UAAU,CAAU,KAAK,CAAC;IACzCC,QAAQ,EAAEF,SAAA,CAAGG,eAAe,CAAc,CAAC;IAC3CC,QAAQ,EAAE;MACNC,QAAQ,EAAE,mCAAmC;MAC7CC,WAAW,EAAE,IAAAC,UAAA,EAAG,QAAQ,CAAC;MACzBC,OAAO,EAAE;QACLC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE;QACLR,QAAQ,EAAE;MACd;IACJ,CAAC;IACDS,cAAc,WAAAA,eAAA,EAAG;MAAA,IAAAC,KAAA;MACb,IAAI,CAACC,MAAM,CAAC,CAAC;MAEb,IAAI,CAACX,QAAQ,CAACY,SAAS,CAAC,UAACZ,QAA0C,EAAK;QACpEa,MAAM,CAACC,MAAM,CAACd,QAAQ,CAAC,CAClBe,OAAO,CAAC,UAAAC,OAAO,EAAI;UAChBA,OAAO,CAACC,MAAM,CAACL,SAAS,CAACF,KAAI,CAACQ,qBAAqB,CAACC,IAAI,CAACT,KAAI,CAAC,CAAC;QACnE,CAAC,CAAC;MACV,CAAC,CAAC;MAEF,OAAO,IAAI;IACf,CAAC;IACDQ,qBAAqB,WAAAA,sBAAA,EAAG;MACpB,IAAMlB,QAA0C,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;MAClE,IAAMoB,aAAa,GAAGP,MAAM,CAACC,MAAM,CAACd,QAAQ,CAAC,CAACqB,IAAI,CAAC,UAAAC,EAAE;QAAA,OAAIA,EAAE,CAACL,MAAM,CAAC,CAAC;MAAA,EAAC;MACrE,IAAI,CAACpB,UAAU,CAACuB,aAAa,CAAC;IAClC,CAAC;IACDG,QAAQ,WAAAA,SAACC,MAAW,EAAEC,KAAiB,EAAE;MAAA,IAAAC,MAAA;MACrCD,KAAK,CAACE,eAAe,CAAC,CAAC;MAEvB,IAAM3B,QAAQ,GAAGa,MAAM,CAACC,MAAM,CAAc,IAAI,CAACd,QAAQ,CAAC,CAAC,CAAC,CAAC4B,MAAM,CAAC,UAACN,EAAe;QAAA,OAAKA,EAAE,CAACL,MAAM,CAAC,CAAC;MAAA,EAAC;MACrGY,KAAA,CAAKC,OAAO,CACPC,IAAI,CAAC,UAAAD,OAAO;QAAA,OAAIA,OAAO,CAACE,cAAc,CAAChC,QAAQ,CAAC;MAAA,EAAC,CACjD+B,IAAI,CAAC,YAAM;QACRL,MAAI,CAACO,QAAQ,CAAC,CAAC;QACf,OAAOP,MAAI,CAACnB,IAAI,CAAC,CAAC,CAAC2B,MAAM,CAAC,CAAC;MAC/B,CAAC,CAAC,CACDH,IAAI,CAAC;QAAA,OAAMI,KAAK,CAAC,IAAA9B,UAAA,EAAG,UAAU,CAAC,CAAC;MAAA,EAAC;IAC1C,CAAC;IACD4B,QAAQ,WAAAA,SAAA,EAAG;MACPpB,MAAM,CAACC,MAAM,CAAC,IAAI,CAACd,QAAQ,CAAC,CAAC,CAAC,CACzBe,OAAO,CAAC,UAACC,OAAoB;QAAA,OAAKA,OAAO,CAACC,MAAM,CAAC,KAAK,CAAC;MAAA,EAAC;IACjE;EACJ,CAAC,CAAC;EAAA,OAAAmB,QAAA;AAAA"}