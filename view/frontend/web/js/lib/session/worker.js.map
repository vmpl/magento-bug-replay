{"version":3,"file":"worker.js","names":["_database","_interopRequireDefault","_axios","_dec","_class","obj","__esModule","default","Worker","WorkerConsumer","_proto","prototype","initInstance","instance","database","SessionDatabase","Promise","resolve","post","event","_this","all","buffer","where","equals","EventType","Meta","count","FullSnapshot","then","_ref","metaCount","snapshotCount","flushBuffer","put","catch","error","sessions","offset","limit","filter","with","events","match","bind","length","items","slice","meta","totalRecords","sessionsIds","map","it","id","Number","isInteger","anyOf","toArray","export","_export","_sorted$shift","_sorted$pop","sorted","sort","timestamp","fromDate","shift","toDate","pop","table","value","key","some","MIN_VALUE","MAX_VALUE","blob","body","FormData","append","File","axios","console","log","delete","_delete","_this2","sessionIds","transaction","eachPrimaryKey","bulkDelete","_this3","first","_ref2","snapshot","tagMetaTitle","data","node","childNodes","find","tagName","_it$attributes","attributes","name","_tagMetaTitle$attribu","_tagMetaTitle$attribu2","href","title","content","sessionId","bulkPut","clear"],"sources":["../../../ts/js/lib/session/worker.ts"],"sourcesContent":["import {\n    EventType,\n    IRecordEvent, IRecordSession,\n    SessionWorker as SessionWorkerInterface,\n} from 'VMPL_BugReplay/js/api/session'\nimport SessionDatabase from \"VMPL_BugReplay/js/lib/session/database\";\nimport {IPaginatorFilter, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\nimport {WorkerConsumer} from \"VMPL_BugReplay/js/lib/worker/consumer\";\nimport axios from \"axios\";\n\n@WorkerConsumer()\nclass Worker implements SessionWorkerInterface {\n    protected database: SessionDatabase;\n\n    initInstance(instance: string): Promise<void> {\n        this.database = new SessionDatabase(instance);\n        return Promise.resolve();\n    }\n\n    post(event: IRecordEvent): Promise<number> {\n        return Promise.all([\n            this.database.buffer.where('type').equals(EventType.Meta).count(),\n            this.database.buffer.where('type').equals(EventType.FullSnapshot).count(),\n        ])\n            .then(([metaCount, snapshotCount]) => {\n                return metaCount === snapshotCount && snapshotCount === 0\n                    ? Promise.resolve()\n                    : this.flushBuffer()\n            })\n            .then(() => this.database.buffer.put(event).catch(error => {\n                throw error;\n            }));\n    }\n\n    sessions(\n        offset: number = 0,\n        limit: number, filter: IPaginatorFilter<IRecordSession>\n    ): Promise<IPaginatorResponse<IRecordSession>> {\n        return this.database.sessions\n            .with({events: 'events'})\n            .then(filter.match.bind(filter))\n            .then(sessions => {\n                const count = sessions.length;\n                return {\n                    items: sessions.slice(offset, offset + limit),\n                    meta: {\n                        totalRecords: count,\n                    }\n                }\n            })\n    }\n\n    events(sessions: IRecordSession[]): Promise<IPaginatorResponse<IRecordEvent>> {\n        const sessionsIds = sessions\n            .map(it => it.id)\n            .filter(it => Number.isInteger(it))\n        return this.database.events\n            .where('sessionId')\n            .anyOf(sessionsIds)\n            .toArray()\n            .then(events => {\n                return <IPaginatorResponse<IRecordEvent>>{\n                    items: events,\n                    meta: {\n                        totalRecords: events.length,\n                    }\n                }\n            })\n    }\n\n    export(sessions?: IRecordSession[]): Promise<void> {\n        // @ts-ignore\n        const sorted = (sessions ?? []).sort(it => it.timestamp < it.timestamp);\n        const fromDate = sorted.shift()?.timestamp;\n        const toDate = sorted.pop()?.timestamp;\n\n        return this.database.export({\n            filter: (table: string, value: any, key?: any): boolean => {\n                switch (table) {\n                    case 'sessions':\n                        return sessions?.length ? sessions.some(it => it.id === (<IRecordSession>value).id) : true;\n                    case 'events':\n                        return (<IRecordEvent>value).timestamp >= (fromDate || Number.MIN_VALUE)\n                            && (<IRecordEvent>value).timestamp <= (toDate || Number.MAX_VALUE);\n                    default:\n                        return false;\n                }\n            },\n        }).then(blob => {\n            const body = new FormData();\n            body.append('database', new File([blob], 'database.json'), 'database.json');\n            return axios.post('/vmpl-bug-report/upload/sessions', body)\n                .then(() => console.log('send'));\n\n        })\n    }\n\n    delete(sessions: IRecordSession[]): Promise<void> {\n        const sessionIds = sessions.map(it => it.id).filter(it => !!it);\n        return this.database.transaction('rw', [this.database.events, this.database.sessions], () => {\n            return this.database.events\n                .where('sessionId')\n                .anyOf(sessionIds)\n                .eachPrimaryKey(it => this.database.events.delete(it))\n                .then(() => this.database.sessions.bulkDelete(sessionIds))\n        });\n    }\n\n    private flushBuffer() {\n        return Promise.all([\n            this.database.buffer.where('type').equals(EventType.Meta).first(),\n            this.database.buffer.where('type').equals(EventType.FullSnapshot).first(),\n        ]).then(([meta, snapshot]) => {\n            const tagMetaTitle = snapshot?.data.node\n                .childNodes.find((it: any) => it?.tagName === 'html')\n                .childNodes.find((it: any) => it?.tagName === 'head')\n                .childNodes.find((it: any) => it?.attributes?.name === 'title')\n\n            return this.database.transaction('rw', [this.database.buffer, this.database.events, this.database.sessions], () => {\n                return this.database.sessions.put({\n                    href: meta.data.href,\n                    title: tagMetaTitle?.attributes?.content ?? 'Unknown',\n                    timestamp: meta.timestamp,\n\n                }).catch(error => {\n                    throw error;\n                }).then(sessionId => {\n                    return this.database.buffer\n                        .toArray()\n                        .then(events => events.map(it => {\n                            it.sessionId = sessionId;\n                            return it;\n                        }))\n                        .then(events => this.database.events.bulkPut(events))\n                        .then(() => this.database.buffer.clear())\n                })\n            })\n        }).then(() => {})\n    }\n}\n\n(new Worker());\n"],"mappings":"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"}