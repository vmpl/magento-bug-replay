{"version":3,"file":"./threads/worker.js","mappings":"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","sources":["webpack://@vmpl/module-bug-replay/webpack/universalModuleDefinition","webpack://@vmpl/module-bug-replay/./node_modules/is-observable/index.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/common.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/serializers.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/symbols.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/transferable.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/types/messages.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/worker/implementation.browser.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/worker/index.js","webpack://@vmpl/module-bug-replay/webpack/bootstrap","webpack://@vmpl/module-bug-replay/webpack/runtime/define property getters","webpack://@vmpl/module-bug-replay/webpack/runtime/hasOwnProperty shorthand","webpack://@vmpl/module-bug-replay/webpack/runtime/make namespace object","webpack://@vmpl/module-bug-replay/./node_modules/threads/worker.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import WorkerContext from \"./dist/worker/index.js\"\n\nexport const expose = WorkerContext.expose\nexport const registerSerializer = WorkerContext.registerSerializer\nexport const Transfer = WorkerContext.Transfer\n"],"names":["root","factory","exports","module","define","amd","a","i","self","_typeof","obj","Symbol","iterator","constructor","prototype","value","observable","Object","defineProperty","serialize","deserialize","registerSerializer","serializers_1","require","registeredSerializer","DefaultSerializer","serializer","extendSerializer","message","input","extend","implementation","fallbackDeserializer","bind","fallbackSerializer","thing","__error_marker","assign","Error","name","stack","DefaultErrorSerializer","error","$worker","$transferable","$terminate","$events","$errors","_defineProperty","key","arg","hint","prim","toPrimitive","undefined","res","call","TypeError","String","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","Transfer","isTransferDescriptor","symbols_1","payload","transferables","_ref","WorkerMessageType","MasterMessageType","isWorkerRuntime","isWindowContext","Window","postMessage","postMessageToMaster","data","transferList","subscribeToMasterMessages","onMessage","messageHandler","messageEvent","addEventListener","removeEventListener","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_arrayLikeToArray","arr","len","arr2","Array","__awaiter","this","thisArg","_arguments","P","fulfilled","step","e","rejected","apply","__importDefault","mod","__esModule","expose","is_observable_1","common_1","transferable_1","messages_1","implementation_1","common_2","get","transferable_2","exposeCalled","activeSubscriptions","Map","isMasterJobRunMessage","run","isObservable","subscribe","isZenObservable","deconstructTransfer","send","postJobErrorMessage","uid","rawError","_deconstructTransfer","errorMessage","postJobResultMessage","completed","resultValue","_deconstructTransfer2","resultMessage","postJobStartMessage","resultType","startMessage","running","postUncaughtErrorMessage","uncaughtError","subError","console","runFunction","jobUID","args","_callee","syncResult","subscription","_context","isArray","_arrayWithoutHoles","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","t0","set","t1","exposed","messageData","map","initMessage","init","concat","methodNames","methods","postModuleInitMessage","filter","cancel","unsubscribe","event","setTimeout","reason","process","on","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","prop","r"],"sourceRoot":""}