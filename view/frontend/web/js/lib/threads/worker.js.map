{"version":3,"file":"./threads/worker.js","mappings":"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","sources":["webpack://@vmpl/module-bug-replay/webpack/universalModuleDefinition","webpack://@vmpl/module-bug-replay/./node_modules/is-observable/index.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/common.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/serializers.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/symbols.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/transferable.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/types/messages.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/worker/implementation.browser.js","webpack://@vmpl/module-bug-replay/./node_modules/threads/dist/worker/index.js","webpack://@vmpl/module-bug-replay/webpack/bootstrap","webpack://@vmpl/module-bug-replay/webpack/runtime/define property getters","webpack://@vmpl/module-bug-replay/webpack/runtime/hasOwnProperty shorthand","webpack://@vmpl/module-bug-replay/webpack/runtime/make namespace object","webpack://@vmpl/module-bug-replay/./node_modules/threads/worker.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import WorkerContext from \"./dist/worker/index.js\"\n\nexport const expose = WorkerContext.expose\nexport const registerSerializer = WorkerContext.registerSerializer\nexport const Transfer = WorkerContext.Transfer\n"],"names":["root","factory","exports","module","define","amd","a","i","self","value","Symbol","observable","Object","defineProperty","serialize","deserialize","registerSerializer","serializers_1","require","registeredSerializer","DefaultSerializer","serializer","extendSerializer","message","input","extend","implementation","fallbackDeserializer","bind","fallbackSerializer","DefaultErrorSerializer","assign","Error","name","stack","error","__error_marker","thing","$worker","$transferable","$terminate","$events","$errors","Transfer","isTransferDescriptor","symbols_1","payload","transferables","send","WorkerMessageType","MasterMessageType","isWorkerRuntime","isWindowContext","Window","postMessage","postMessageToMaster","data","transferList","subscribeToMasterMessages","onMessage","messageHandler","messageEvent","addEventListener","unsubscribe","removeEventListener","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","expose","is_observable_1","common_1","transferable_1","messages_1","implementation_1","common_2","enumerable","get","transferable_2","default","exposeCalled","activeSubscriptions","Map","isMasterJobRunMessage","type","run","isObservable","subscribe","isZenObservable","deconstructTransfer","undefined","postJobErrorMessage","uid","rawError","errorMessage","postJobResultMessage","completed","resultValue","resultMessage","complete","postUncaughtErrorMessage","uncaughtError","subError","console","runFunction","jobUID","fn","args","syncResult","resultType","startMessage","running","postJobStartMessage","subscription","delete","set","exposed","messageData","method","map","initMessage","init","postFunctionInitMessage","methodNames","methods","postModuleInitMessage","keys","filter","key","cancel","event","setTimeout","reason","process","on","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","definition","o","obj","prop","prototype","hasOwnProperty","r","toStringTag"],"sourceRoot":""}