{"version":3,"file":"session.js","names":["EventType"],"sources":["../../ts/js/api/session.ts"],"sourcesContent":["import {IPaginatorFilter, IPaginatorResponse} from \"VMPL_BugReplay/js/api/paginator\";\n\nexport enum EventType {\n    DomContentLoaded = 0,\n    Load = 1,\n    FullSnapshot = 2,\n    IncrementalSnapshot = 3,\n    Meta = 4,\n    Custom = 5,\n    Plugin = 6\n}\n\nexport interface IRecordEvent {\n    timestamp: number,\n    type: EventType,\n    data: any,\n    sessionId?: number\n}\n\nexport interface IRecordSession {\n    id?: number,\n    readonly title: string;\n    readonly timestamp: number;\n    readonly href: string;\n}\n\nexport interface SessionWorker {\n    initInstance(instance: string): Promise<void>;\n    post(event: IRecordEvent): Promise<number>;\n    sessions(offset: number, limit: number, filter: IPaginatorFilter<IRecordSession>): Promise<IPaginatorResponse<IRecordSession>>;\n    events(sessions: IRecordSession[]): Promise<IPaginatorResponse<IRecordEvent>>;\n    export(sessions?: IRecordSession[]): Promise<Blob>;\n    delete(sessions: IRecordSession[]): Promise<void>;\n}\n"],"mappings":";;;MAEYA,SAAS,0BAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAATA,SAAS,CAATA,SAAS;IAAA,OAATA,SAAS;EAAA;EAAA;IAAAA,SAAA,EAAAA;EAAA;AAAA"}