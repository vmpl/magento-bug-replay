{"version":3,"file":"paginator.js","names":[],"sources":["../../ts/js/api/paginator.ts"],"sourcesContent":["import {PaginatorFilter} from \"VMPL_BugReplay/js/lib/items-paginator\";\n\nexport interface IPaginatorLoader<T extends Object> {\n    loadPaginatorItems: (offset: number, limit: number, filter: IPaginatorFilter<T>) => Promise<IPaginatorResponse<T>>;\n}\n\nexport interface IPaginatorResponse<T extends Object> {\n    items: Array<T>,\n    meta: {\n        totalRecords: number,\n    }\n}\n\nexport interface ICompare {\n    match(item: any, against: any): boolean;\n}\n\nexport interface IPaginatorFilter<T extends Object> {\n    and: boolean;\n    property: PropertyKey;\n    compare: ICompare;\n    value: any;\n\n    append(...filters: [PaginatorFilter<T>]): PaginatorFilter<T>;\n    match(items: Array<T>): Array<T>;\n}\n"],"mappings":""}